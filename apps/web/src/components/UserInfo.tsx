import { TelegramUser, TelegramWebApp } from '../hooks/useTelegram'

interface UserInfoProps {
  user: TelegramUser | null
  webApp: TelegramWebApp | null
  initDataAvailable: boolean
}

export const UserInfo = ({ user, webApp, initDataAvailable }: UserInfoProps) => {
  if (!user) {
    return (
      <div className="user-card">
        <div className="user-info">
          <h3>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω</h3>
          <p>–û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</p>
          {!initDataAvailable && (
            <p style={{ color: '#ff4757', marginTop: '8px' }}>
              ‚ö†Ô∏è initData –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            </p>
          )}
        </div>
      </div>
    )
  }

  const fullName = [user.first_name, user.last_name].filter(Boolean).join(' ')

  return (
    <div className="user-card">
      <div className="user-info">
        <h3>üë§ {fullName || 'Telegram User'}</h3>
        <p><strong>ID:</strong> {user.id}</p>
        {user.username && <p><strong>Username:</strong> @{user.username}</p>}
        {user.language_code && <p><strong>–Ø–∑—ã–∫:</strong> {user.language_code}</p>}
        
        <div style={{ marginTop: '12px', fontSize: '12px', opacity: 0.7 }}>
          <p><strong>Telegram WebApp:</strong> {webApp?.version || 'N/A'}</p>
          <p><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> {webApp?.platform || 'Browser'}</p>
          <p><strong>–°—Ö–µ–º–∞:</strong> {webApp?.colorScheme || 'light'}</p>
          {initDataAvailable ? (
            <p style={{ color: '#2ed573' }}>‚úÖ InitData –ø–æ–ª—É—á–µ–Ω</p>
          ) : (
            <p style={{ color: '#ff4757' }}>‚ùå InitData –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
          )}
        </div>
      </div>
    </div>
  )
}
